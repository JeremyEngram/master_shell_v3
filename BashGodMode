#!/bin/bash

echo "The following is a global system configuration standard for Linux based distrobutions such as Ubuntu. These configurations in part help to maintain continutiy of the base system.";
echo "They are as follows, user defined username, /opt and /var/www/html directories are added to the username defined path for execution of custom installed packages and scripts as well as default write user access to apache web-server document root.";
echo "Referencable preinstalled custom bash .sh or python .py scripts created symlinks are implemented right into the user's home directory for quick and easy access. These can be removed later by the user as desktop icons for each script are autogenerated also";
echo "Mext a recursive function apt automatically searches github for bash AND/OR python repositories related to OSINT, information gathering and investgations tools. An aggregated list is then printed to the screen for review by the user while the systm waits for further input.";
echo "The user then can decide to or not to implement any or all of those repositiories by copying and pasting all of them or line by line with one space denoting seperate repositories then being passed off to a function that will iterate each repo for pip requirements.txt files";
echo "If python or bash related install scripts are found after the face they are execute recursively after successful pip implementations. -> Next another recursive function iterates over each repo implementation to generate executable autostart desktop application icons so that any of them can be used and executed standaline on the fly. " 
echo "A for loop function then iterates ALL README.md files in each directory outputting a general usage summary for the user on-screen as it finishes up, while sourcing those same details to man pages and ~/.bashrc_aliases and sourcing that file for alias execution in other manual or automated use cases.";

echo "Finally, a function call from the global configuration script will be made to the main user select interface prompting for a minimal interaction fully automated information gathering and reporting framework."; /n 


read -p "YOUR USERNAME:> " USR
sudo chown -R $USR /opt
PATH=$PATH:~/opt
PATH=$PATH:/home/$USR
sudo chmod +x /opt/*.sh && sudo chmod +x /opt/*.py
find /opt -type f -name "*.sh" -exec ln -s {} ./ \;
find /opt -type f -name "*.py" -exec ln -s {} ./ \;



# Search Github API repositories with the keywords "information gathering"
url="https://api.github.com/search/repositories?q=information+gathering+language:bash"

response=$(curl -s "$url")

titles=$(echo "$response" | jq -r '.items[].name')
descriptions=$(echo "$response" | jq -r '.items[].description')
urls=$(echo "$response" | jq -r '.items[].html_url')

for i in "${!titles[@]}"
do
  printf "%s\n%s\n%s\n\n" "${titles[$i]}" "${descriptions[$i]}" "${urls[$i]}"
done




read -p "Enter a list of Github repository URLs (separated by spaces): " -a urls


for url in "${urls[@]}"
do
  sudo git clone "$url" "/opt/$(basename $url .git)"
done

find /opt -name "requirements.txt" -execdir sudo -H pip3 install -r {} \;
find /opt -name "setup.py" -o -name "install.py" -execdir sudo -H python3 {} install \;


# PRINT SOME OUTPUT VALIDATING SUCCESSFUL IMPLEMENTATION AND PROMPT USER FOR FURTHER INTERACTION WITH THE TOOLS THEMSELVES


username="$USR"
groupname="www-data"

if [ -d /var/www/html ]; then
  # Add the user to the group
  sudo usermod -a -G "$groupname" "$username"
  sudo chmod 775 /var/www/html
  sudo chown -R www-data:"$groupname" /var/www/html
else
  echo "/var/www/html directory not found"
fi


desktop_dir="$HOME/Desktop/"

for file in /opt/*.{sh,py}; do

  name="$(basename "$file" | cut -d. -f1)"
  
  echo "[Desktop Entry]
Type=Application
Encoding=UTF-8
Name=$name
Comment=
Exec=$file
Icon=
Terminal=true
Categories=Application;Development;" > "$desktop_dir/$name.desktop"
  
  chmod +x "$desktop_dir/$name.desktop"
done




for dir in /opt/*/; do
 
  if [[ -f "$dir/README.md" ]]; then

    echo "Contents of $dir/README.md:"
    cat "$dir/README.md"
    echo ""
  fi
done



aliases_file="$HOME/.bashrc_aliases"


for dir in /opt/*/; do

  if [[ -f "$dir/README.md" ]]; then
    while read line; do
      if [[ "$line" == *"```"* ]]; then

        command=$(echo "$line" | sed -n 's/.*```\(.*\)\( | .*\)\{0,1\}$/\1/p')
        alias_name=$(basename "$command")
        alias_command="alias $alias_name=\"$command\""

        echo "$alias_command" >> "$aliases_file"
      fi
    done < "$dir/README.md"
  fi
done

source .bashrc_aliases
echo ""
